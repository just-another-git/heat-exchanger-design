# -*- coding: utf-8 -*-
"""Heat Exchanger.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fEmylQYr48YUu1xoRHS0iHUAFrGGtuYl
"""

import numpy as np
import CoolProp as CP
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')

"""Taking Input Values."""

print('DESIGN OF SHELL AND TUBE HEAT EXCHANGER')
print('Please provide necessary inputs')
H_fluid = input("Enter Hot fluid: ") 
C_fluid= input("Enter Coolant: ") 
Mflow_h= float(input("Enter Mass flowrate(Kg/s): "))
Tih= int(input("Enter Inlet temperature of Hot fluid(in centrigrade): "))
Toh= int(input("Enter outlet temperature of Hot fluid(in centrigrade): "))
Tic= int(input("Enter inlet temperature of cold fluid(in centrigrade): "))

"""We calculate T1,T2, t1,t2 in the next step. This is required for calculation of LMTD and LMTD correction factor."""

# In[11]:


Tih=Tih+273
Toh=Toh+273
Tic=Tic+273
Toc=Tic+10

"""Calculating the cp value using properties of water imported from coolprop library."""

# In[12]:


#heat balance
# caloric temp determination
from CoolProp.CoolProp import PropsSI
hot_calc=(Tih+Toh)/2
cold_calc=(Tic+Toc)/2
cp_cold= PropsSI('C','T',cold_calc,'P',101325,'IF97::Water')
cp_hot=int(input("Enter Specific heat of Naphta at caloric temp(in J/kgK): "))

#calculation of massflow of cold
Mflow_c=(Mflow_h*cp_hot*(Tih-Toh))/(cp_cold*(Toc-Tic))
Mflow_c



"""Calculation of R and S."""

R = (Tih-Toh)/(Toc-Tic)

S = (Toc-Tic)/(Tih-Tic)

"""Calculation of LMTD."""

delt1 = Tih - Toc
delt2 = Toh - Tic

LMTD = (delt1 - delt2)/(ln(delt1/delt2))

"""Calculation of LMTD Correction factor."""

#Insert formula here

R=(Tih-Toh)/(Toc-Tic)
S=((Toc-Tic)/(Tih-Tic))
Ft= ((sqrt(R**2+1)*log(1-S))/(1-R*S))/((R-1)*log(2-S*(R+1-sqrt(R**2+1)))/(2-S*(R+1+sqrt(R**2+1))))
Ft

"""Iteration starts from here."""

U_assumed = 100
Q = 28.014

A = Q/(U_assumed*Ft*LMTD)

L = 6.096                     #L is assumed to be 20ft. Converted to SI unit
outer_d = 0.0254              #Assumed to be 1 inch.
inner_d = 0.01905

nt = (A)/(3.14*outer_d*L)

print(nt)

nt=int(input("input next higher integer value of nt")). #might be deleted later
na=int(input("input value of na"))

## WRITE NA AND NT RELATION HERE. (FROM DQ KERN)

"""Calculation of Tube side Reynold's Number (Value of na, and nt is calculated.)"""

# tube side heat transfer coefficient
density_hot=807
k_hot=0.2
viscosity_hot=0.7*pow(10,-3)
v=Mflow_h*4*tpass/(density_hot*pi*inner_d**2*na)
Re=density_hot*v*inner_d/(viscosity_hot)
Pr=(viscosity_hot)/(density_hot*cp_hot)
Nu_tube=0.023*pow(Re,0.8)*pow(Pr,0.3)
h_tube=(Nu*k_hot)/outer_d
h_tube